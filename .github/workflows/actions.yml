name: Crystal Specs
on:
  push:
    paths:
      - '**'
      - '!**.md'
  pull_request:
    paths:
      - '**'
      - '!**.md'
jobs:
  test:
    name: Crystal Specs
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Create Kind Cluster 
      run: |
        export CLUSTER=$(uuidgen)
        echo "export CLUSTER=$CLUSTER" > cluster.env
        echo kind create cluster --name $CLUSTER --kubeconfig ./$CLUSTER.conf
        kind --version
        kind create cluster --name $CLUSTER --kubeconfig ./$CLUSTER.conf
        export KUBECONFIG=$(pwd)/$CLUSTER.conf
        kubectl get nodes 
    - name: Setup CNF-Conformance
      run: |
        helm repo add stable https://cncf.gitlab.io/stable
        git fetch --all --tags --force
    - name: Install Testsuite
      run: |
        source <(curl -s https://raw.githubusercontent.com/cncf/cnf-testsuite/main/curl_install.sh)
    - name: Check Testsuite
      run: |
        export PATH=$HOME/.cnf-testsuite:$PATH
        ~/.cnf-testsuite/cnf-testsuite version
    - name: Install Open5gs 
      run: |
        export PATH=$HOME/.cnf-testsuite:$PATH
        source cluster.env
        export KUBECONFIG=$(pwd)/$CLUSTER.conf
        ~/.cnf-testsuite/cnf-testsuite -l info cnf_setup cnf-config=./sample-open5gs/cnf-testsuite.yml
        ~/.cnf-testsuite/cnf-testsuite -l info cnf_setup cnf-config=./sample-ueransim/cnf-testsuite.yml
    - name: Run Cert for Open5gs 
      run: |
        export PATH=$HOME/.cnf-testsuite:$PATH
        source cluster.env
        export KUBECONFIG=$(pwd)/$CLUSTER.conf
        ~/.cnf-testsuite/cnf-testsuite cert ~cert_resilience ~cni_compatible 
    - name: Delete Cluster
      if: ${{ always() }}
      run: |
        source cluster.env
        kind delete cluster --name $CLUSTER
        docker container prune -f || true
        docker volume prune -f || true
